// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log opened at 2015-10-17 12:02:39
 development mode --enabled true 
buzzorclass add --className SingXCustomerTestCase  --srcPath test
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type SingXCustomerTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type SingXCustomerTestCase --field_name singxcustomerRepository --dataType singx.app.server.repository.SingXCustomerRepository<singx.app.shared.singx.SingXCustomer> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name singxcustomerRepository --valueType singx.app.server.repository.SingXCustomerRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingXCustomerTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingXCustomerTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingXCustomerTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type SingXCustomerTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type SingXCustomerTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingXCustomerTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type SingXCustomerTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type SingXCustomerTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass SingXCustomerTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass SingXCustomerTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass SingXCustomerTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass SingXCustomerTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass SingXCustomerTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.SingXCustomer
 Import add --toClass SingXCustomerTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass SingXCustomerTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("haHBbLillBdZJTY418UQ76qeXi3uZPYm"); country.setCapitalLatitude(2); country.setCapitalLongitude(6); country.setCountryCode1("1AT"); country.setCountryCode2("Uus"); country.setCountryFlag("AwlDfiXFqJ4lUI4DCh2lL1SCt7taFma7Cl5h5ET2oGxgi86kPT"); country.setCountryName("4rQBmdb2khF5EwBeLK5828ZYPpAWHebhex5WLvvosMfDhCHGBK"); country.setCurrencyCode("zAU"); country.setCurrencyName("GaZlqJAy2wGJ3OwZeHcu7aQTilQGQmAN1D2dhpkbPbwoInDV60"); country.setCurrencySymbol("eYJkm2BuN4nLGQk0W8lQ3QDDACVhljUp"); country.setIsoNumeric(10); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());CustomerType customertype=new CustomerType();customertype.setCustomerTypeName("ZluMeC2CI1j2JjuSP86zqnTNR9PBV8wMogmjjMG3rWsisz766q"); CustomerType CustomerTypeTest =customertypeRepository.save(customertype);map.put("CustomerTypePrimaryKey", customertype._getPrimarykey());SingXCustomer singxcustomer=new SingXCustomer();singxcustomer.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setCustomerTypeId((java.lang.String)CustomerTypeTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setEmailId("MXKUSD8axbkVTyJYjcL39m88RRorgWoGhSLYqNrnT1qwKwjSBc"); java.util.List<SingxContacts> listOfSingxContacts = new java.util.ArrayList<SingxContacts>();SingxContacts singxcontacts=new SingxContacts();Gender gender=new Gender();gender.setGender("mQR4fUs15NHeGH3FpN2OrKaKj97U3KVVNXs8jlrNkcAxVerEEN"); Gender GenderTest =genderRepository.save(gender);map.put("GenderPrimaryKey", gender._getPrimarykey());CallingCode callingcode=new CallingCode();callingcode.setCallingCode("fiiVIy22xuyykZTzJ6KY9nw8r6rjiIBdHRoBeMFaOSRFcbBn0D"); callingcode.setCallingCode("wPLjMWKOck4lj2b9gESqIOZR2canMgy8l9pnUBuq1z5FJTQSU3"); callingcode.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */CallingCode CallingCodeTest =callingcodeRepository.save(callingcode);map.put("CallingCodePrimaryKey", callingcode._getPrimarykey());SingxPrefix singxprefix=new SingxPrefix();singxprefix.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxprefix.setPrefixName("gKqpYXAdcjy9fidH53dtXPkdZehlaSsFl6O1DowloQxCxsIhmQ"); SingxPrefix SingxPrefixTest =singxprefixRepository.save(singxprefix);map.put("SingxPrefixPrimaryKey", singxprefix._getPrimarykey());singxcontacts.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setDateOfBirth(new java.sql.Date(123456789)); singxcontacts.setEmailId("W7uAgi2JVTWYPLQo7tqwwd8NfObkfDGKgD4BllB5G66Jghjhkw"); singxcontacts.setFirstName("SV086yhqN0twhDj9Ka1icDan7OwH3kFb3eFVnNyOjFUzMge9ZC"); singxcontacts.setGenderId((java.lang.String)GenderTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setLastName("Y9U8Fv3WhXmEnd16g7bEBlyTFlhukDR0jk00wL8tr4IoKt77Z4"); singxcontacts.setMiddleName("wfXv6dcRCFIeFjIghkyo67JztGDUrNCYsPQRAn20WVaoRp94ZC"); singxcontacts.setPhoneCountryCode((java.lang.String)CallingCodeTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setPhoneNumber(2147483647); singxcontacts.setPrefixId((java.lang.String)SingxPrefixTest._getPrimarykey()); listOfSingxContacts.add(singxcontacts);singxcustomer.addAllSingxContacts(listOfSingxContacts);singxcustomer.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);singxcustomer.setEntityValidator(entityValidator);singxcustomer.isValid();singxcustomerRepository.save(singxcustomer); map.put("SingXCustomerPrimaryKey", singxcustomer._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.location.Country
buzzorfield create --type SingXCustomerTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.CustomerType
buzzorfield create --type SingXCustomerTestCase --field_name customertypeRepository --dataType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name customertypeRepository --valueType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.SingxContacts
buzzorfield create --type SingXCustomerTestCase --field_name singxcontactsRepository --dataType singx.app.server.repository.SingxContactsRepository<singx.app.shared.singx.SingxContacts> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name singxcontactsRepository --valueType singx.app.server.repository.SingxContactsRepository<singx.app.shared.singx.SingxContacts> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.location.Country
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.contacts.Gender
buzzorfield create --type SingXCustomerTestCase --field_name genderRepository --dataType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name genderRepository --valueType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.CallingCode
buzzorfield create --type SingXCustomerTestCase --field_name callingcodeRepository --dataType singx.app.server.repository.CallingCodeRepository<singx.app.shared.singx.CallingCode> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name callingcodeRepository --valueType singx.app.server.repository.CallingCodeRepository<singx.app.shared.singx.CallingCode> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.location.Country
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.SingxPrefix
buzzorfield create --type SingXCustomerTestCase --field_name singxprefixRepository --dataType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --Modifier private --valueType 
fieldAnnotation create --type SingXCustomerTestCase --field_name singxprefixRepository --valueType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.location.Country
buzzormethod add --toClass SingXCustomerTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));SingXCustomer singxcustomer=singxcustomerRepository.findById((java.lang.String)map.get("SingXCustomerPrimaryKey"));singxcustomer.setEmailId("LAOscaM75mG3oxSPxnq1WcYOycm0hYn0Sy6uiGW8O1Vh0g1VQh");singxcustomer.setVersionId(1);singxcustomer.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);singxcustomerRepository.update(singxcustomer);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<SingXCustomer> listofcountryId=singxcustomerRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));singxcustomerRepository.findById((java.lang.String)map.get("SingXCustomerPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name test3findBycustomerTypeId --modifier public --return_type void --method_body " try {java.util.List<SingXCustomer> listofcustomerTypeId=singxcustomerRepository.findByCustomerTypeId((java.lang.String)map.get("CustomerTypePrimaryKey"));if(listofcustomerTypeId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingXCustomerTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));singxcustomerRepository.delete((java.lang.String)map.get("SingXCustomerPrimaryKey"));/* Deleting refrenced data */singxprefixRepository.delete((java.lang.String)map.get("SingxPrefixPrimaryKey"));/* Deleting refrenced data */callingcodeRepository.delete((java.lang.String)map.get("CallingCodePrimaryKey"));/* Deleting refrenced data */genderRepository.delete((java.lang.String)map.get("GenderPrimaryKey"));/* Deleting refrenced data */customertypeRepository.delete((java.lang.String)map.get("CustomerTypePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzproperties codeStatus --PropertyFileName status --key SingxContacts --value 1
buzzorclass add --className ~.app.shared.singx.SingxContacts --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.SingxContacts --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_SingxContacts_T.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,SingxContacts.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType
Persistent add entity --entityName singx.app.shared.singx.SingxContacts
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name firstName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value firstName.com.fasterxml.jackson.annotation.JsonProperty,firstName.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name firstName --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name firstName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name middleName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value middleName.com.fasterxml.jackson.annotation.JsonProperty,middleName.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name middleName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name lastName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value lastName.com.fasterxml.jackson.annotation.JsonProperty,lastName.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name lastName --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name lastName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name dateOfBirth --dataType java.sql.Date --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value dateOfBirth.com.fasterxml.jackson.annotation.JsonProperty,dateOfBirth.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name dateOfBirth --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name emailId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value emailId.com.fasterxml.jackson.annotation.JsonProperty,emailId.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name emailId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --dataType java.lang.Integer --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value phoneNumber.com.fasterxml.jackson.annotation.JsonProperty,phoneNumber.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType integer --annotation javax.validation.constraints.Min --key value.javax.validation.constraints.Min --value "-2147483648.javax.validation.constraints.Min"
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType integer --annotation javax.validation.constraints.Max --key value.javax.validation.constraints.Max --value "2147483647.javax.validation.constraints.Max"
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name contactId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value contactId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,contactId.javax.persistence.Column
fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name contactId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name prefixId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value prefixId.com.fasterxml.jackson.annotation.JsonProperty,prefixId.javax.persistence.Column
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name genderId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value genderId.com.fasterxml.jackson.annotation.JsonProperty,genderId.javax.persistence.Column
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name phoneCountryCode --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value phoneCountryCode.com.fasterxml.jackson.annotation.JsonProperty,phoneCountryCode.javax.persistence.Column
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value countryId.com.fasterxml.jackson.annotation.JsonProperty,countryId.javax.persistence.Column
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"
buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName firstName --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName middleName --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName lastName --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName dateOfBirth --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName emailId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName phoneNumber --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName primaryKey --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName contactId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName prefixId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName genderId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName phoneCountryCode --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName countryId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName versionId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName primaryDisplay --getterMethod false --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName systemInfo --getterMethod true --setterMethod true
methodoperation type hardDelete --entityName ~.app.shared.singx.SingxContacts
methodoperation type setValidator --class ~.app.shared.singx.SingxContacts
methodoperation type setLoggedUserInfo --class ~.app.shared.singx.SingxContacts --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false
methodoperation type comparatorDefaultBody --class ~.app.shared.singx.SingxContacts
methodoperation type getPrimayDisplay --class ~.app.shared.singx.SingxContacts --variableName firstName,lastName
methodoperation type toString --class ~.app.shared.singx.SingxContacts
methodoperation type hashCode --class ~.app.shared.singx.SingxContacts --primaryClass true
methodoperation type equals --class ~.app.shared.singx.SingxContacts --primaryClass true
class --abstract true --class ~.app.server.service.SingxContactsService
buzzorclass add --className ~.app.server.service.SingxContactsServiceImpl  --extends singx.app.server.service.SingxContactsService --value_type string --annotation org.springframework.web.bind.annotation.RestController
Class createAnnotation --toClass ~.app.server.service.SingxContactsServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.service.SingxContactsService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.service.SingxContactsServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
interfacebuzzor add --InterfaceName ~.app.server.repository.SingxContactsRepository --genericType T --extends com.athena.server.repository.SearchInterface
buzzorclass add --className ~.app.server.repository.SingxContactsRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.SingxContactsRepository#singx.app.shared.singx.SingxContacts --annotation org.springframework.stereotype.Repository
Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
buzzorfield create --type ~.app.server.repository.SingxContactsRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type BusinessService --sevicePath ~.app.server.service.SingxContactsServiceImpl --fieldName contactId,countryId --fieldType String,String
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.DefaultFinders --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.contactId LIKE :contactId and e.countryId LIKE :countryId"
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByPrefixId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.prefixId=:prefixId"
methodoperation type namedQueryMethod --queryName SingxContacts.findByPrefixId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.prefixId=:prefixId" --qarameteres prefixId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingxPrefix
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByGenderId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.genderId=:genderId"
methodoperation type namedQueryMethod --queryName SingxContacts.findByGenderId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.genderId=:genderId" --qarameteres genderId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Gender
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByPhoneCountryCode --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.phoneCountryCode=:phoneCountryCode"
methodoperation type namedQueryMethod --queryName SingxContacts.findByPhoneCountryCode --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.phoneCountryCode=:phoneCountryCode" --qarameteres phoneCountryCode --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.CallingCode
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByCountryId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"
methodoperation type namedQueryMethod --queryName SingxContacts.findByCountryId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Country
namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findById --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and  e.contactId =:contactId"
methodoperation type namedQueryMethod --queryName SingxContacts.findById --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and  e.contactId =:contactId" --qarameteres contactId --typeOfParameteres String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType singx.app.shared.singx.SingxContacts --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingxContacts
buzzproperties codeStatus --PropertyFileName status --key SingxContacts --value 0
buzzorclass add --className SingxContactsTestCase  --srcPath test
Class createAnnotation --toClass SingxContactsTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass SingxContactsTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass SingxContactsTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass SingxContactsTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type SingxContactsTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type SingxContactsTestCase --field_name singxcontactsRepository --dataType singx.app.server.repository.SingxContactsRepository<singx.app.shared.singx.SingxContacts> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name singxcontactsRepository --valueType singx.app.server.repository.SingxContactsRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingxContactsTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingxContactsTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingxContactsTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type SingxContactsTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type SingxContactsTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type SingxContactsTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type SingxContactsTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type SingxContactsTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass SingxContactsTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass SingxContactsTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass SingxContactsTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass SingxContactsTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass SingxContactsTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.singx.SingxContacts
 Import add --toClass SingxContactsTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass SingxContactsTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("v7L80FrFOidCyt0qoJ6AR2TO692Lob8h"); country.setCapitalLatitude(3); country.setCapitalLongitude(11); country.setCountryCode1("Ng8"); country.setCountryCode2("ekw"); country.setCountryFlag("TPGJjcxlksZJrujl6mqr85yxMKEDPFXH2TOaUkTvyRcLadfVhR"); country.setCountryName("qC4FGJCOzE15jv8fIP8304ejESWgt3iJQZQ0ka6EnUvkM95gYT"); country.setCurrencyCode("NNk"); country.setCurrencyName("UX1NQzbl01KD2eDBQXCouCv0Xxmf0i172JZ0i9XAQpMQ7Exh6G"); country.setCurrencySymbol("7FaKaRh0ttn2rLaFVocYgoRcFezEFPyl"); country.setIsoNumeric(1); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());Gender gender=new Gender();gender.setGender("5b6bAfkTxihZTMGT4kcTFeHtMMLeVjrdoYfUCmlk6QlSZH5Pnt"); Gender GenderTest =genderRepository.save(gender);map.put("GenderPrimaryKey", gender._getPrimarykey());CallingCode callingcode=new CallingCode();callingcode.setCallingCode("f7Q8q5yjul8QYPvk6jtXEQZUJ34fsiDsF3gVyNuMQPwcwvQmNH"); callingcode.setCallingCode("4jdNr8tNW4HWmaWO3Zl0hcKevXBbzPcEV7XP2qaXRxOLcAzKKG"); callingcode.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */CallingCode CallingCodeTest =callingcodeRepository.save(callingcode);map.put("CallingCodePrimaryKey", callingcode._getPrimarykey());SingxPrefix singxprefix=new SingxPrefix();singxprefix.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxprefix.setPrefixName("leIIlq4Zq96toq1aoq45aqWTQ9oJWhw8wPLPrAAFhpqqnu6SD6"); SingxPrefix SingxPrefixTest =singxprefixRepository.save(singxprefix);map.put("SingxPrefixPrimaryKey", singxprefix._getPrimarykey());SingxContacts singxcontacts=new SingxContacts();singxcontacts.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setDateOfBirth(new java.sql.Date(123456789)); singxcontacts.setEmailId("hcUTzo9ej7bYig8ZDzezPsWUbgnLTT8NyTVD11i08qQzzmPLfW"); singxcontacts.setFirstName("8cRTNoeyRl0qWXqeaNAETxj9DJPeNDRygpTHfwY5QQURGWPtvz"); singxcontacts.setGenderId((java.lang.String)GenderTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setLastName("mbSS0r29sp8CikIn63NltK7HFCjuekvWGk74zEDBONyRrVjzon"); singxcontacts.setMiddleName("3wbCWrBW5oIJ8r7URSxj4EeZnHtRSW2uPrTPwptKn3PmhqlrwD"); singxcontacts.setPhoneCountryCode((java.lang.String)CallingCodeTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setPhoneNumber(2147483647); singxcontacts.setPrefixId((java.lang.String)SingxPrefixTest._getPrimarykey()); singxcontacts.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);singxcontacts.setEntityValidator(entityValidator);singxcontacts.isValid();singxcontactsRepository.save(singxcontacts); map.put("SingxContactsPrimaryKey", singxcontacts._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.location.Country
buzzorfield create --type SingxContactsTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.contacts.Gender
buzzorfield create --type SingxContactsTestCase --field_name genderRepository --dataType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name genderRepository --valueType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.singx.CallingCode
buzzorfield create --type SingxContactsTestCase --field_name callingcodeRepository --dataType singx.app.server.repository.CallingCodeRepository<singx.app.shared.singx.CallingCode> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name callingcodeRepository --valueType singx.app.server.repository.CallingCodeRepository<singx.app.shared.singx.CallingCode> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.location.Country
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.singx.SingxPrefix
buzzorfield create --type SingxContactsTestCase --field_name singxprefixRepository --dataType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --Modifier private --valueType 
fieldAnnotation create --type SingxContactsTestCase --field_name singxprefixRepository --valueType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.location.Country
buzzormethod add --toClass SingxContactsTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));SingxContacts singxcontacts=singxcontactsRepository.findById((java.lang.String)map.get("SingxContactsPrimaryKey"));singxcontacts.setDateOfBirth(new java.sql.Date(123456789));singxcontacts.setEmailId("EnvRnoBMk99KemVLNWPvkJuNWehVZYzOJp88R61eaNDdT2Arci");singxcontacts.setFirstName("Mf3FR4kE4zsGbCZqiQOEn6A4j2EQbsBdUtNkBicSMV26W6nDrO");singxcontacts.setLastName("jlLQGX3dTbYvmGfYnuVlw9DcOdFZmLWo9d0lIptxnMvK9oALz1");singxcontacts.setMiddleName("FOic6W7nz1WkIhjFTPIyajctMveSwSyN3XUWU82Q76R3lK8xfA");singxcontacts.setPhoneNumber(2147483647);singxcontacts.setVersionId(1);singxcontacts.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);singxcontactsRepository.update(singxcontacts);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));singxcontactsRepository.findById((java.lang.String)map.get("SingxContactsPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofcountryId=singxcontactsRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test3findBygenderId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofgenderId=singxcontactsRepository.findByGenderId((java.lang.String)map.get("GenderPrimaryKey"));if(listofgenderId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test3findByphoneCountryCode --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofphoneCountryCode=singxcontactsRepository.findByPhoneCountryCode((java.lang.String)map.get("CallingCodePrimaryKey"));if(listofphoneCountryCode.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test3findByprefixId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofprefixId=singxcontactsRepository.findByPrefixId((java.lang.String)map.get("SingxPrefixPrimaryKey"));if(listofprefixId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass SingxContactsTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));singxcontactsRepository.delete((java.lang.String)map.get("SingxContactsPrimaryKey"));/* Deleting refrenced data */singxprefixRepository.delete((java.lang.String)map.get("SingxPrefixPrimaryKey"));/* Deleting refrenced data */callingcodeRepository.delete((java.lang.String)map.get("CallingCodePrimaryKey"));/* Deleting refrenced data */genderRepository.delete((java.lang.String)map.get("GenderPrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
buzzproperties codeStatus --PropertyFileName status --key CustomerContactMap --value 1
buzzproperties codeStatus --PropertyFileName status --key CustomerContactMap --value 0
quit
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log closed at 2015-10-17 12:03:02
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log opened at 2015-10-17 12:03:02
// script --file singx.cf
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log closed at 2015-10-17 12:03:02
