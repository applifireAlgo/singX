



 development mode --enabled true 



buzzproperties codeStatus --PropertyFileName status --key ResidenceType --value 1

// Entity Creation 

buzzorclass add --className ~.app.shared.singx.ResidenceType --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.ResidenceType --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_ResidenceType_M.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,ResidenceType.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType

Persistent add entity --entityName singx.app.shared.singx.ResidenceType

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name residenceTypeName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value residenceTypeName.com.fasterxml.jackson.annotation.JsonProperty,residenceTypeName.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.ResidenceType --field_name residenceTypeName --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.ResidenceType --field_name residenceTypeName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#50

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name residencTypeId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value residencTypeId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,residencTypeId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value countryId.com.fasterxml.jackson.annotation.JsonProperty,countryId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"

buzzorfield create --type ~.app.shared.singx.ResidenceType --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName residenceTypeName --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName primaryKey --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName residencTypeId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName countryId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName versionId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName primaryDisplay --getterMethod false --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.ResidenceType --variableName systemInfo --getterMethod true --setterMethod true

methodoperation type hardDelete --entityName ~.app.shared.singx.ResidenceType

methodoperation type setValidator --class ~.app.shared.singx.ResidenceType

methodoperation type setLoggedUserInfo --class ~.app.shared.singx.ResidenceType --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false

methodoperation type comparatorDefaultBody --class ~.app.shared.singx.ResidenceType

methodoperation type getPrimayDisplay --class ~.app.shared.singx.ResidenceType --variableName residenceTypeName

methodoperation type toString --class ~.app.shared.singx.ResidenceType

methodoperation type hashCode --class ~.app.shared.singx.ResidenceType --primaryClass true

methodoperation type equals --class ~.app.shared.singx.ResidenceType --primaryClass true

class --abstract true --class ~.app.server.service.ResidenceTypeService

buzzorclass add --className ~.app.server.service.ResidenceTypeServiceImpl  --extends singx.app.server.service.ResidenceTypeService --value_type string --annotation org.springframework.web.bind.annotation.RestController

Class createAnnotation --toClass ~.app.server.service.ResidenceTypeServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.service.ResidenceTypeService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for ResidenceType Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.service.ResidenceTypeServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for ResidenceType Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

interfacebuzzor add --InterfaceName ~.app.server.repository.ResidenceTypeRepository --genericType T --extends com.athena.server.repository.SearchInterface

buzzorclass add --className ~.app.server.repository.ResidenceTypeRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.ResidenceTypeRepository#singx.app.shared.singx.ResidenceType --annotation org.springframework.stereotype.Repository

Class createAnnotation --toClass ~.app.server.repository.ResidenceTypeRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.repository.ResidenceTypeRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for ResidenceType Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.repository.ResidenceTypeRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for ResidenceType Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

buzzorfield create --type ~.app.server.repository.ResidenceTypeRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired

methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false



methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.ResidenceType --readOnly false --controllerClass ~.app.server.service.ResidenceTypeService  --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.ResidenceTypeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type BusinessService --sevicePath ~.app.server.service.ResidenceTypeServiceImpl --fieldName countryId,residencTypeId --fieldType String,String

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.ResidenceType --queryName ResidenceType.DefaultFinders --queryValue "select e from ResidenceType e where e.systemInfo.activeStatus=1 and e.residencTypeId LIKE :residencTypeId and e.countryId LIKE :countryId"

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.ResidenceType --queryName ResidenceType.findByCountryId --queryValue "select e from ResidenceType e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"

methodoperation type namedQueryMethod --queryName ResidenceType.findByCountryId --qvalue "select e from ResidenceType e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.ResidenceType --controllerClass ~.app.server.service.ResidenceTypeService --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --businessServiceClass ~.app.server.businessservice.ResidenceTypebzService --returnType java.util.List<singx.app.shared.singx.ResidenceType> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Country

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.ResidenceType --queryName ResidenceType.findById --queryValue "select e from ResidenceType e where e.systemInfo.activeStatus=1 and  e.residencTypeId =:residencTypeId"

methodoperation type namedQueryMethod --queryName ResidenceType.findById --qvalue "select e from ResidenceType e where e.systemInfo.activeStatus=1 and  e.residencTypeId =:residencTypeId" --qarameteres residencTypeId --typeOfParameteres String --entityName ~.app.shared.singx.ResidenceType --controllerClass ~.app.server.service.ResidenceTypeService --controllerImplClass ~.app.server.service.ResidenceTypeServiceImpl --repositoryClass ~.app.server.repository.ResidenceTypeRepository --repositoryImplClass ~.app.server.repository.ResidenceTypeRepositoryImpl --businessServiceClass ~.app.server.businessservice.ResidenceTypebzService --returnType singx.app.shared.singx.ResidenceType --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.ResidenceType

buzzproperties codeStatus --PropertyFileName status --key ResidenceType --value 0



buzzorclass add --className ResidenceTypeTestCase  --srcPath test
Class createAnnotation --toClass ResidenceTypeTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass ResidenceTypeTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass ResidenceTypeTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass ResidenceTypeTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type ResidenceTypeTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class

buzzorfield create --type ResidenceTypeTestCase --field_name residencetypeRepository --dataType singx.app.server.repository.ResidenceTypeRepository<singx.app.shared.singx.ResidenceType> --Modifier private --valueType 

fieldAnnotation create --type ResidenceTypeTestCase --field_name residencetypeRepository --valueType singx.app.server.repository.ResidenceTypeRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type ResidenceTypeTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 

fieldAnnotation create --type ResidenceTypeTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type ResidenceTypeTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 

fieldAnnotation create --type ResidenceTypeTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type ResidenceTypeTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"

buzzorfield create --type ResidenceTypeTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true

buzzorfield create --type ResidenceTypeTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 

fieldAnnotation create --type ResidenceTypeTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type ResidenceTypeTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType

buzzorfield create --type ResidenceTypeTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType

buzzorfield create --type ResidenceTypeTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType

buzzormethod add --toClass ResidenceTypeTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"

buzzormethod add --toClass ResidenceTypeTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"

buzzormethod add --toClass ResidenceTypeTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"

buzzormethod add --toClass ResidenceTypeTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"

buzzormethod add --toClass ResidenceTypeTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass ResidenceTypeTestCase --importType singx.app.shared.singx.ResidenceType
 Import add --toClass ResidenceTypeTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE

buzzormethod add --toClass ResidenceTypeTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("CFj6NQ4B1AT5nEY1b9K7Xzk0Dhxvczym"); country.setCapitalLatitude(5); country.setCapitalLongitude(11); country.setCountryCode1("hnV"); country.setCountryCode2("Lcx"); country.setCountryFlag("13DGU1WEhw0Uv4tU8GRBMimtxbJlamgkRNfZkCK4Dd0qRf4zKu"); country.setCountryName("CcnL3ky2CFXH5yr5uVunZ3NUZwH1cWcW61Rzu8lyqRsL5i4TYx"); country.setCurrencyCode("VSk"); country.setCurrencyName("nHlHYS6fktiCZkDkHJ4vhFBXMWYkuPAee9B9pc12jVVp7K3kB9"); country.setCurrencySymbol("ofQHITFkYQDrM8wS6d0lb4jTDxaWYdS3"); country.setIsoNumeric(6); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());ResidenceType residencetype=new ResidenceType();residencetype.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */residencetype.setResidenceTypeName("M2QjEFaknOV0fmGbc5C3wOIAtHE5PWxGcOmWrMtcGwLQoGgYSZ"); residencetype.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);residencetype.setEntityValidator(entityValidator);residencetype.isValid();residencetypeRepository.save(residencetype); map.put("ResidenceTypePrimaryKey", residencetype._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass ResidenceTypeTestCase --importType singx.app.shared.location.Country

buzzorfield create --type ResidenceTypeTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 

fieldAnnotation create --type ResidenceTypeTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("ResidenceTypePrimaryKey"));ResidenceType residencetype=residencetypeRepository.findById((java.lang.String)map.get("ResidenceTypePrimaryKey"));residencetype.setResidenceTypeName("g33oFBxcyXno6CJpFsi9hHjYQ5JhBxK6S1X50ZFiXqZBtRp5OR");residencetype.setVersionId(1);residencetype.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);residencetypeRepository.update(residencetype);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<ResidenceType> listofcountryId=residencetypeRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("ResidenceTypePrimaryKey"));residencetypeRepository.findById((java.lang.String)map.get("ResidenceTypePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass ResidenceTypeTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("ResidenceTypePrimaryKey"));residencetypeRepository.delete((java.lang.String)map.get("ResidenceTypePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""





quit