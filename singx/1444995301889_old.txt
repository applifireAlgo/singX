



 development mode --enabled true 



buzzproperties codeStatus --PropertyFileName status --key SingXCustomer --value 1

// Entity Creation 

buzzorclass add --className ~.app.shared.singx.SingXCustomer --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.SingXCustomer --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_SingXCustomer_T.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,SingXCustomer.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType

Persistent add entity --entityName singx.app.shared.singx.SingXCustomer

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name emailId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value emailId.com.fasterxml.jackson.annotation.JsonProperty,emailId.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingXCustomer --field_name emailId --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.SingXCustomer --field_name emailId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#100

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name customerId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value customerId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,customerId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value countryId.com.fasterxml.jackson.annotation.JsonProperty,countryId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name customerTypeId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value customerTypeId.com.fasterxml.jackson.annotation.JsonProperty,customerTypeId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name individualRegDetail --dataType singx.app.shared.singx.IndividualRegDetail --Modifier private --annotation javax.persistence.OneToOne --key cascade.javax.persistence.OneToOne,fetch.javax.persistence.OneToOne,mappedBy.javax.persistence.OneToOne --value javax.persistence.CascadeType$ALL#javax.persistence.OneToOne,javax.persistence.FetchType$EAGER#javax.persistence.OneToOne,singXCustomer.javax.persistence.OneToOne  --valueType javatype,javatype,string

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"

buzzorfield create --type ~.app.shared.singx.SingXCustomer --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName emailId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName primaryKey --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName customerId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName countryId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName customerTypeId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName versionId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName primaryDisplay --getterMethod false --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName systemInfo --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingXCustomer --variableName individualRegDetail --getterMethod true --setterMethod true --direction BIDIRECTION

methodoperation type hardDelete --entityName ~.app.shared.singx.SingXCustomer

methodoperation type setValidator --class ~.app.shared.singx.SingXCustomer

methodoperation type setLoggedUserInfo --class ~.app.shared.singx.SingXCustomer --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false

methodoperation type comparatorDefaultBody --class ~.app.shared.singx.SingXCustomer

methodoperation type getPrimayDisplay --class ~.app.shared.singx.SingXCustomer

methodoperation type toString --class ~.app.shared.singx.SingXCustomer

methodoperation type hashCode --class ~.app.shared.singx.SingXCustomer --primaryClass true

methodoperation type equals --class ~.app.shared.singx.SingXCustomer --primaryClass true

class --abstract true --class ~.app.server.service.SingXCustomerService

buzzorclass add --className ~.app.server.service.SingXCustomerServiceImpl  --extends singx.app.server.service.SingXCustomerService --value_type string --annotation org.springframework.web.bind.annotation.RestController

Class createAnnotation --toClass ~.app.server.service.SingXCustomerServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.service.SingXCustomerService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingXCustomer Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.service.SingXCustomerServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingXCustomer Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

interfacebuzzor add --InterfaceName ~.app.server.repository.SingXCustomerRepository --genericType T --extends com.athena.server.repository.SearchInterface

buzzorclass add --className ~.app.server.repository.SingXCustomerRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.SingXCustomerRepository#singx.app.shared.singx.SingXCustomer --annotation org.springframework.stereotype.Repository

Class createAnnotation --toClass ~.app.server.repository.SingXCustomerRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.repository.SingXCustomerRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingXCustomer Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.repository.SingXCustomerRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingXCustomer Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

buzzorfield create --type ~.app.server.repository.SingXCustomerRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired

methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false



methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingXCustomer --readOnly false --controllerClass ~.app.server.service.SingXCustomerService  --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingXCustomerBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type BusinessService --sevicePath ~.app.server.service.SingXCustomerServiceImpl --fieldName countryId,customerId,customerTypeId,emailId --fieldType String,String,String,String

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingXCustomer --queryName SingXCustomer.DefaultFinders --queryValue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and e.customerId LIKE :customerId and e.countryId LIKE :countryId and e.customerTypeId LIKE :customerTypeId and e.emailId LIKE :emailId"

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingXCustomer --queryName SingXCustomer.findByCountryId --queryValue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"

methodoperation type namedQueryMethod --queryName SingXCustomer.findByCountryId --qvalue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingXCustomer --controllerClass ~.app.server.service.SingXCustomerService --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingXCustomerbzService --returnType java.util.List<singx.app.shared.singx.SingXCustomer> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Country

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingXCustomer --queryName SingXCustomer.findByCustomerTypeId --queryValue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and e.customerTypeId=:customerTypeId"

methodoperation type namedQueryMethod --queryName SingXCustomer.findByCustomerTypeId --qvalue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and e.customerTypeId=:customerTypeId" --qarameteres customerTypeId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingXCustomer --controllerClass ~.app.server.service.SingXCustomerService --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingXCustomerbzService --returnType java.util.List<singx.app.shared.singx.SingXCustomer> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.CustomerType

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingXCustomer --queryName SingXCustomer.findById --queryValue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and  e.customerId =:customerId"

methodoperation type namedQueryMethod --queryName SingXCustomer.findById --qvalue "select e from SingXCustomer e where e.systemInfo.activeStatus=1 and  e.customerId =:customerId" --qarameteres customerId --typeOfParameteres String --entityName ~.app.shared.singx.SingXCustomer --controllerClass ~.app.server.service.SingXCustomerService --controllerImplClass ~.app.server.service.SingXCustomerServiceImpl --repositoryClass ~.app.server.repository.SingXCustomerRepository --repositoryImplClass ~.app.server.repository.SingXCustomerRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingXCustomerbzService --returnType singx.app.shared.singx.SingXCustomer --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingXCustomer

buzzproperties codeStatus --PropertyFileName status --key SingXCustomer --value 0



buzzorclass add --className SingXCustomerTestCase  --srcPath test
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass SingXCustomerTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type SingXCustomerTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class

buzzorfield create --type SingXCustomerTestCase --field_name singxcustomerRepository --dataType singx.app.server.repository.SingXCustomerRepository<singx.app.shared.singx.SingXCustomer> --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name singxcustomerRepository --valueType singx.app.server.repository.SingXCustomerRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingXCustomerTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingXCustomerTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingXCustomerTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"

buzzorfield create --type SingXCustomerTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true

buzzorfield create --type SingXCustomerTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingXCustomerTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType

buzzorfield create --type SingXCustomerTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType

buzzorfield create --type SingXCustomerTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType

buzzormethod add --toClass SingXCustomerTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"

buzzormethod add --toClass SingXCustomerTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"

buzzormethod add --toClass SingXCustomerTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"

buzzormethod add --toClass SingXCustomerTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"

buzzormethod add --toClass SingXCustomerTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.SingXCustomer
 Import add --toClass SingXCustomerTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE

buzzormethod add --toClass SingXCustomerTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("UIol3cn4WKO4laj91iSlCnsIXdtYfbpm"); country.setCapitalLatitude(8); country.setCapitalLongitude(7); country.setCountryCode1("ffF"); country.setCountryCode2("0VA"); country.setCountryFlag("VxiNm67tCxEK5Nx082ZeZLafjDFRizX9GkGyuYYXLGtghvWNFO"); country.setCountryName("nGBISIcn60HS4uNAd4YM6ag93PgpFtYFfdeq1MTT7IMHVJC54t"); country.setCurrencyCode("dkM"); country.setCurrencyName("iw8moofFbmWP5G1ogWOktFIcASOvwHuH069yPoftZTqYOrfvJw"); country.setCurrencySymbol("TjxtnEqIybbcAgPAttcgpeXu66HbQpLU"); country.setIsoNumeric(7); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());CustomerType customertype=new CustomerType();customertype.setCustomerTypeName("TijuNj6eZ2mOYqLbuHCQkj00dhtUCcWCN99uvNTGWiQeyz5e1W"); CustomerType CustomerTypeTest =customertypeRepository.save(customertype);map.put("CustomerTypePrimaryKey", customertype._getPrimarykey());SingXCustomer singxcustomer=new SingXCustomer();singxcustomer.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setCustomerTypeId((java.lang.String)CustomerTypeTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setEmailId("wH1svushgJ15Jv0eh6RSTedjV6yi61aC0VKEoe8mtTtDtwvuM4"); singxcustomer.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);singxcustomer.setEntityValidator(entityValidator);singxcustomer.isValid();singxcustomerRepository.save(singxcustomer); map.put("SingXCustomerPrimaryKey", singxcustomer._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.location.Country

buzzorfield create --type SingXCustomerTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingXCustomerTestCase --importType singx.app.shared.singx.CustomerType

buzzorfield create --type SingXCustomerTestCase --field_name customertypeRepository --dataType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --Modifier private --valueType 

fieldAnnotation create --type SingXCustomerTestCase --field_name customertypeRepository --valueType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));SingXCustomer singxcustomer=singxcustomerRepository.findById((java.lang.String)map.get("SingXCustomerPrimaryKey"));singxcustomer.setEmailId("cGgwofaaiAAd5gWkwCcLc0eQyoKVtDz3LeZ9Y3KLmWjvRIylJL");singxcustomer.setVersionId(1);singxcustomer.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);singxcustomerRepository.update(singxcustomer);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<SingXCustomer> listofcountryId=singxcustomerRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));singxcustomerRepository.findById((java.lang.String)map.get("SingXCustomerPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name test3findBycustomerTypeId --modifier public --return_type void --method_body " try {java.util.List<SingXCustomer> listofcustomerTypeId=singxcustomerRepository.findByCustomerTypeId((java.lang.String)map.get("CustomerTypePrimaryKey"));if(listofcustomerTypeId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingXCustomerTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingXCustomerPrimaryKey"));singxcustomerRepository.delete((java.lang.String)map.get("SingXCustomerPrimaryKey"));/* Deleting refrenced data */customertypeRepository.delete((java.lang.String)map.get("CustomerTypePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""



buzzproperties codeStatus --PropertyFileName status --key IndividualRegDetail --value 1

// Entity Creation 

buzzorclass add --className ~.app.shared.singx.IndividualRegDetail --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.IndividualRegDetail --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_IndividualRegDetail_T.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,IndividualRegDetail.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType

Persistent add entity --entityName singx.app.shared.singx.IndividualRegDetail

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name nationalityId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value nationalityId.com.fasterxml.jackson.annotation.JsonProperty,nationalityId.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.IndividualRegDetail --field_name nationalityId --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.IndividualRegDetail --field_name nationalityId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name idProofValue --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value idProofValue.com.fasterxml.jackson.annotation.JsonProperty,idProofValue.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.IndividualRegDetail --field_name idProofValue --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.IndividualRegDetail --field_name idProofValue --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#50

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name expiryDate --dataType java.sql.Date --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value expiryDate.com.fasterxml.jackson.annotation.JsonProperty,expiryDate.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.IndividualRegDetail --field_name expiryDate --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name mapId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value mapId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,mapId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name residenceTypeId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value residenceTypeId.com.fasterxml.jackson.annotation.JsonProperty,residenceTypeId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name documentId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value documentId.com.fasterxml.jackson.annotation.JsonProperty,documentId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name singXCustomer --dataType singx.app.shared.singx.SingXCustomer --Modifier private --annotation javax.persistence.OneToOne,javax.persistence.JoinColumn  --key cascade.javax.persistence.OneToOne,fetch.javax.persistence.OneToOne,name.javax.persistence.JoinColumn,referencedColumnName.javax.persistence.JoinColumn --value javax.persistence.CascadeType$REFRESH#javax.persistence.OneToOne,javax.persistence.FetchType$EAGER#javax.persistence.OneToOne,customerId.javax.persistence.JoinColumn,customerId.javax.persistence.JoinColumn --valueType javatype,javatype,string,string

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"

buzzorfield create --type ~.app.shared.singx.IndividualRegDetail --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName nationalityId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName idProofValue --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName expiryDate --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName primaryKey --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName mapId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName residenceTypeId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName documentId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName versionId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName primaryDisplay --getterMethod false --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName systemInfo --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.IndividualRegDetail --variableName singXCustomer --getterMethod true --setterMethod true --direction BIDIRECTION

methodoperation type hardDelete --entityName ~.app.shared.singx.IndividualRegDetail

methodoperation type setValidator --class ~.app.shared.singx.IndividualRegDetail

methodoperation type setLoggedUserInfo --class ~.app.shared.singx.IndividualRegDetail --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false

methodoperation type comparatorDefaultBody --class ~.app.shared.singx.IndividualRegDetail

methodoperation type getPrimayDisplay --class ~.app.shared.singx.IndividualRegDetail

methodoperation type toString --class ~.app.shared.singx.IndividualRegDetail

methodoperation type hashCode --class ~.app.shared.singx.IndividualRegDetail --primaryClass true

methodoperation type equals --class ~.app.shared.singx.IndividualRegDetail --primaryClass true

class --abstract true --class ~.app.server.service.IndividualRegDetailService

buzzorclass add --className ~.app.server.service.IndividualRegDetailServiceImpl  --extends singx.app.server.service.IndividualRegDetailService --value_type string --annotation org.springframework.web.bind.annotation.RestController

Class createAnnotation --toClass ~.app.server.service.IndividualRegDetailServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.service.IndividualRegDetailService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for IndividualRegDetail Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.service.IndividualRegDetailServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for IndividualRegDetail Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

interfacebuzzor add --InterfaceName ~.app.server.repository.IndividualRegDetailRepository --genericType T --extends com.athena.server.repository.SearchInterface

buzzorclass add --className ~.app.server.repository.IndividualRegDetailRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.IndividualRegDetailRepository#singx.app.shared.singx.IndividualRegDetail --annotation org.springframework.stereotype.Repository

Class createAnnotation --toClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.repository.IndividualRegDetailRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for IndividualRegDetail Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for IndividualRegDetail Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

buzzorfield create --type ~.app.server.repository.IndividualRegDetailRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired

methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false



methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.IndividualRegDetail --readOnly false --controllerClass ~.app.server.service.IndividualRegDetailService  --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.IndividualRegDetailBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type BusinessService --sevicePath ~.app.server.service.IndividualRegDetailServiceImpl --fieldName customerId,residenceTypeId --fieldType String,String

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.IndividualRegDetail --queryName IndividualRegDetail.DefaultFinders --queryValue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.singXCustomer.customerId LIKE :customerId and e.residenceTypeId LIKE :residenceTypeId"

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.IndividualRegDetail --queryName IndividualRegDetail.findByCustomerId --queryValue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.singXCustomer.customerId=:customerId"

methodoperation type namedQueryMethod --queryName IndividualRegDetail.findByCustomerId --qvalue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.singXCustomer.customerId=:customerId" --qarameteres customerId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.IndividualRegDetail --controllerClass ~.app.server.service.IndividualRegDetailService --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --businessServiceClass ~.app.server.businessservice.IndividualRegDetailbzService --returnType java.util.List<singx.app.shared.singx.IndividualRegDetail> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingXCustomer

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.IndividualRegDetail --queryName IndividualRegDetail.findByResidenceTypeId --queryValue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.residenceTypeId=:residenceTypeId"

methodoperation type namedQueryMethod --queryName IndividualRegDetail.findByResidenceTypeId --qvalue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.residenceTypeId=:residenceTypeId" --qarameteres residenceTypeId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.IndividualRegDetail --controllerClass ~.app.server.service.IndividualRegDetailService --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --businessServiceClass ~.app.server.businessservice.IndividualRegDetailbzService --returnType java.util.List<singx.app.shared.singx.IndividualRegDetail> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.ResidenceType

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.IndividualRegDetail --queryName IndividualRegDetail.findByDocumentId --queryValue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.documentId=:documentId"

methodoperation type namedQueryMethod --queryName IndividualRegDetail.findByDocumentId --qvalue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and e.documentId=:documentId" --qarameteres documentId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.IndividualRegDetail --controllerClass ~.app.server.service.IndividualRegDetailService --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --businessServiceClass ~.app.server.businessservice.IndividualRegDetailbzService --returnType java.util.List<singx.app.shared.singx.IndividualRegDetail> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.CfgDocIndividual

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.IndividualRegDetail --queryName IndividualRegDetail.findById --queryValue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and  e.mapId =:mapId"

methodoperation type namedQueryMethod --queryName IndividualRegDetail.findById --qvalue "select e from IndividualRegDetail e where e.systemInfo.activeStatus=1 and  e.mapId =:mapId" --qarameteres mapId --typeOfParameteres String --entityName ~.app.shared.singx.IndividualRegDetail --controllerClass ~.app.server.service.IndividualRegDetailService --controllerImplClass ~.app.server.service.IndividualRegDetailServiceImpl --repositoryClass ~.app.server.repository.IndividualRegDetailRepository --repositoryImplClass ~.app.server.repository.IndividualRegDetailRepositoryImpl --businessServiceClass ~.app.server.businessservice.IndividualRegDetailbzService --returnType singx.app.shared.singx.IndividualRegDetail --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.IndividualRegDetail

buzzproperties codeStatus --PropertyFileName status --key IndividualRegDetail --value 0



buzzorclass add --className IndividualRegDetailTestCase  --srcPath test
Class createAnnotation --toClass IndividualRegDetailTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass IndividualRegDetailTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass IndividualRegDetailTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass IndividualRegDetailTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type IndividualRegDetailTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class

buzzorfield create --type IndividualRegDetailTestCase --field_name individualregdetailRepository --dataType singx.app.server.repository.IndividualRegDetailRepository<singx.app.shared.singx.IndividualRegDetail> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name individualregdetailRepository --valueType singx.app.server.repository.IndividualRegDetailRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type IndividualRegDetailTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type IndividualRegDetailTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type IndividualRegDetailTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"

buzzorfield create --type IndividualRegDetailTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true

buzzorfield create --type IndividualRegDetailTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type IndividualRegDetailTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType

buzzorfield create --type IndividualRegDetailTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType

buzzorfield create --type IndividualRegDetailTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType

buzzormethod add --toClass IndividualRegDetailTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"

buzzormethod add --toClass IndividualRegDetailTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"

buzzormethod add --toClass IndividualRegDetailTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"

buzzormethod add --toClass IndividualRegDetailTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"

buzzormethod add --toClass IndividualRegDetailTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.IndividualRegDetail
 Import add --toClass IndividualRegDetailTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test1Save --modifier public --return_type void --method_body " try { SingXCustomer singxcustomer=new SingXCustomer();Country country=new Country();country.setCapital("ocQAnaAFH9K3m5Siz8oXjzCvonq8dmeQ"); country.setCapitalLatitude(3); country.setCapitalLongitude(4); country.setCountryCode1("OHB"); country.setCountryCode2("Kz5"); country.setCountryFlag("qJFLFozwYzh0FNRsHm0I4uyPrQwTH4p1dbWhUKoodgJNqzWnZc"); country.setCountryName("LDSB1uPZnBxj9UxSsMQUkhnYTkAfhwnB7ybniIIaEtnSL9FpwL"); country.setCurrencyCode("bog"); country.setCurrencyName("kWcU6sEbdpGTi7MAPSoVgK1qVtY1o04q59eqMr6mtQQEeaI3Hv"); country.setCurrencySymbol("PGjubWg1Yj6bmJjwbS6U9i0Ot9SfrjDJ"); country.setIsoNumeric(2); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());CustomerType customertype=new CustomerType();customertype.setCustomerTypeName("lg2YYZ6yUWCFgNyIgvGmvR2Q2S3sSbzUboSQe2fkHFVYWWoVED"); CustomerType CustomerTypeTest =customertypeRepository.save(customertype);map.put("CustomerTypePrimaryKey", customertype._getPrimarykey());singxcustomer.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setCustomerTypeId((java.lang.String)CustomerTypeTest._getPrimarykey()); /* ******Adding refrenced table data */singxcustomer.setEmailId("2cqCy34HYtOCBAjnCpgoSa43KZH9wwWPeaYw4ZWlKfTSQn6RZC"); CfgDocIndividual cfgdocindividual=new CfgDocIndividual();cfgdocindividual.setDisplaySeq(2147483647); cfgdocindividual.setDocumentName("WPHEDXXTxGYHGDR7Kbu4dDMeMreVbQ1YH9s2XfqdkK2bx2uLm6"); cfgdocindividual.setIsExpiryDateReqd(true); cfgdocindividual.setIsIssueDateReqd(true); cfgdocindividual.setIsMandatory(true); cfgdocindividual.setIsReferenceNoReqd(true); cfgdocindividual.setIsRemarksReqd(true); cfgdocindividual.setMaxSize(2147483647); ResidenceType residencetype=new ResidenceType();residencetype.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */residencetype.setResidenceTypeName("aqW4v3taUOPHX8s3p7dYwJRQFDwKYX9UNJFJ8vzlKlwQ4KsM8s"); ResidenceType ResidenceTypeTest =residencetypeRepository.save(residencetype);map.put("ResidenceTypePrimaryKey", residencetype._getPrimarykey());cfgdocindividual.setDisplaySeq(2147483647); cfgdocindividual.setDocumentName("MGmKk3bSLIQsZe69WWdNW2tVISy8n1QdebiwYKJ42AihczGjVC"); cfgdocindividual.setIsExpiryDateReqd(true); cfgdocindividual.setIsIssueDateReqd(true); cfgdocindividual.setIsMandatory(true); cfgdocindividual.setIsReferenceNoReqd(true); cfgdocindividual.setIsRemarksReqd(true); cfgdocindividual.setMaxSize(2147483647); cfgdocindividual.setResidenceTypeId((java.lang.String)ResidenceTypeTest._getPrimarykey()); /* ******Adding refrenced table data */CfgDocIndividual CfgDocIndividualTest =cfgdocindividualRepository.save(cfgdocindividual);map.put("CfgDocIndividualPrimaryKey", cfgdocindividual._getPrimarykey());IndividualRegDetail individualregdetail=new IndividualRegDetail();individualregdetail.setSingXCustomer(singxcustomerRepository.save(singxcustomer));individualregdetail.setDocumentId((java.lang.String)CfgDocIndividualTest._getPrimarykey()); /* ******Adding refrenced table data */individualregdetail.setExpiryDate(new java.sql.Date(123456789)); individualregdetail.setIdProofValue("qvLf0KzZ8z0AeCHkPE5Z0IGvddb1pZamQErN6b7TRv5P9pO0hb"); individualregdetail.setNationalityId("A65bh5dVfWaTqlai5bbBSgjCDEzRTkmUjRGXQFDlkzCIFVGaMH"); individualregdetail.setResidenceTypeId((java.lang.String)ResidenceTypeTest._getPrimarykey()); /* ******Adding refrenced table data */individualregdetail.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);individualregdetail.setEntityValidator(entityValidator);individualregdetail.isValid();individualregdetailRepository.save(individualregdetail); map.put("IndividualRegDetailPrimaryKey", individualregdetail._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.SingXCustomer

buzzorfield create --type IndividualRegDetailTestCase --field_name singxcustomerRepository --dataType singx.app.server.repository.SingXCustomerRepository<singx.app.shared.singx.SingXCustomer> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name singxcustomerRepository --valueType singx.app.server.repository.SingXCustomerRepository<singx.app.shared.singx.SingXCustomer> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.location.Country

buzzorfield create --type IndividualRegDetailTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.CustomerType

buzzorfield create --type IndividualRegDetailTestCase --field_name customertypeRepository --dataType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name customertypeRepository --valueType singx.app.server.repository.CustomerTypeRepository<singx.app.shared.singx.CustomerType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.CfgDocIndividual

buzzorfield create --type IndividualRegDetailTestCase --field_name cfgdocindividualRepository --dataType singx.app.server.repository.CfgDocIndividualRepository<singx.app.shared.singx.CfgDocIndividual> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name cfgdocindividualRepository --valueType singx.app.server.repository.CfgDocIndividualRepository<singx.app.shared.singx.CfgDocIndividual> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.ResidenceType

buzzorfield create --type IndividualRegDetailTestCase --field_name residencetypeRepository --dataType singx.app.server.repository.ResidenceTypeRepository<singx.app.shared.singx.ResidenceType> --Modifier private --valueType 

fieldAnnotation create --type IndividualRegDetailTestCase --field_name residencetypeRepository --valueType singx.app.server.repository.ResidenceTypeRepository<singx.app.shared.singx.ResidenceType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.location.Country
 Import add --toClass IndividualRegDetailTestCase --importType singx.app.shared.singx.ResidenceType

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("IndividualRegDetailPrimaryKey"));IndividualRegDetail individualregdetail=individualregdetailRepository.findById((java.lang.String)map.get("IndividualRegDetailPrimaryKey"));individualregdetail.setExpiryDate(new java.sql.Date(123456789));individualregdetail.setIdProofValue("B5edtXiD5npxcilydkqfegsO0jfx4ts4pPsEeCoTRbTAWNG7rZ");individualregdetail.setNationalityId("WegZyQ31NaXEqBCWpTgwUUuyKIReTQsEqXdDWSksWiVq0UJDmF");individualregdetail.setVersionId(1);individualregdetail.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);individualregdetailRepository.update(individualregdetail);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test3findBycustomerId --modifier public --return_type void --method_body " try {java.util.List<IndividualRegDetail> listofcustomerId=individualregdetailRepository.findByCustomerId((java.lang.String)map.get("SingXCustomerPrimaryKey"));if(listofcustomerId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test3findBydocumentId --modifier public --return_type void --method_body " try {java.util.List<IndividualRegDetail> listofdocumentId=individualregdetailRepository.findByDocumentId((java.lang.String)map.get("CfgDocIndividualPrimaryKey"));if(listofdocumentId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("IndividualRegDetailPrimaryKey"));individualregdetailRepository.findById((java.lang.String)map.get("IndividualRegDetailPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test3findByresidenceTypeId --modifier public --return_type void --method_body " try {java.util.List<IndividualRegDetail> listofresidenceTypeId=individualregdetailRepository.findByResidenceTypeId((java.lang.String)map.get("ResidenceTypePrimaryKey"));if(listofresidenceTypeId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass IndividualRegDetailTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("IndividualRegDetailPrimaryKey"));individualregdetailRepository.delete((java.lang.String)map.get("IndividualRegDetailPrimaryKey"));/* Deleting refrenced data */cfgdocindividualRepository.delete((java.lang.String)map.get("CfgDocIndividualPrimaryKey"));/* Deleting refrenced data */residencetypeRepository.delete((java.lang.String)map.get("ResidenceTypePrimaryKey"));/* Deleting refrenced data */customertypeRepository.delete((java.lang.String)map.get("CustomerTypePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""



buzzproperties codeStatus --PropertyFileName status --key SingxContacts --value 1

// Entity Creation 

buzzorclass add --className ~.app.shared.singx.SingxContacts --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.SingxContacts --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_SingxContacts_T.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,SingxContacts.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType

Persistent add entity --entityName singx.app.shared.singx.SingxContacts

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name firstName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value firstName.com.fasterxml.jackson.annotation.JsonProperty,firstName.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name firstName --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name firstName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name middleName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value middleName.com.fasterxml.jackson.annotation.JsonProperty,middleName.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name middleName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name lastName --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value lastName.com.fasterxml.jackson.annotation.JsonProperty,lastName.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name lastName --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name lastName --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name dateOfBirth --dataType java.sql.Date --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value dateOfBirth.com.fasterxml.jackson.annotation.JsonProperty,dateOfBirth.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name dateOfBirth --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name emailId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value emailId.com.fasterxml.jackson.annotation.JsonProperty,emailId.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name emailId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name phoneCountryCode --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value phoneCountryCode.com.fasterxml.jackson.annotation.JsonProperty,phoneCountryCode.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneCountryCode --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneCountryCode --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --dataType java.lang.Integer --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value phoneNumber.com.fasterxml.jackson.annotation.JsonProperty,phoneNumber.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType integer --annotation javax.validation.constraints.Min --key value.javax.validation.constraints.Min --value "-2147483648.javax.validation.constraints.Min"

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name phoneNumber --valueType integer --annotation javax.validation.constraints.Max --key value.javax.validation.constraints.Max --value "2147483647.javax.validation.constraints.Max"

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name contactId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value contactId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,contactId.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.SingxContacts --field_name contactId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name prefixId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value prefixId.com.fasterxml.jackson.annotation.JsonProperty,prefixId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name genderId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value genderId.com.fasterxml.jackson.annotation.JsonProperty,genderId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value countryId.com.fasterxml.jackson.annotation.JsonProperty,countryId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"

buzzorfield create --type ~.app.shared.singx.SingxContacts --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName firstName --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName middleName --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName lastName --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName dateOfBirth --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName emailId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName phoneCountryCode --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName phoneNumber --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName primaryKey --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName contactId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName prefixId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName genderId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName countryId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName versionId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName primaryDisplay --getterMethod false --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.SingxContacts --variableName systemInfo --getterMethod true --setterMethod true

methodoperation type hardDelete --entityName ~.app.shared.singx.SingxContacts

methodoperation type setValidator --class ~.app.shared.singx.SingxContacts

methodoperation type setLoggedUserInfo --class ~.app.shared.singx.SingxContacts --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false

methodoperation type comparatorDefaultBody --class ~.app.shared.singx.SingxContacts

methodoperation type getPrimayDisplay --class ~.app.shared.singx.SingxContacts --variableName firstName,lastName

methodoperation type toString --class ~.app.shared.singx.SingxContacts

methodoperation type hashCode --class ~.app.shared.singx.SingxContacts --primaryClass true

methodoperation type equals --class ~.app.shared.singx.SingxContacts --primaryClass true

class --abstract true --class ~.app.server.service.SingxContactsService

buzzorclass add --className ~.app.server.service.SingxContactsServiceImpl  --extends singx.app.server.service.SingxContactsService --value_type string --annotation org.springframework.web.bind.annotation.RestController

Class createAnnotation --toClass ~.app.server.service.SingxContactsServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.service.SingxContactsService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.service.SingxContactsServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

interfacebuzzor add --InterfaceName ~.app.server.repository.SingxContactsRepository --genericType T --extends com.athena.server.repository.SearchInterface

buzzorclass add --className ~.app.server.repository.SingxContactsRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.SingxContactsRepository#singx.app.shared.singx.SingxContacts --annotation org.springframework.stereotype.Repository

Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.repository.SingxContactsRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for SingxContacts Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

buzzorfield create --type ~.app.server.repository.SingxContactsRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired

methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false



methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.SingxContacts --readOnly false --controllerClass ~.app.server.service.SingxContactsService  --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.SingxContactsBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false

methodoperation type BusinessService --sevicePath ~.app.server.service.SingxContactsServiceImpl --fieldName contactId,countryId --fieldType String,String

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.DefaultFinders --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.contactId LIKE :contactId and e.countryId LIKE :countryId"

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByPrefixId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.prefixId=:prefixId"

methodoperation type namedQueryMethod --queryName SingxContacts.findByPrefixId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.prefixId=:prefixId" --qarameteres prefixId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingxPrefix

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByGenderId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.genderId=:genderId"

methodoperation type namedQueryMethod --queryName SingxContacts.findByGenderId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.genderId=:genderId" --qarameteres genderId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Gender

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findByCountryId --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"

methodoperation type namedQueryMethod --queryName SingxContacts.findByCountryId --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType java.util.List<singx.app.shared.singx.SingxContacts> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Country

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.SingxContacts --queryName SingxContacts.findById --queryValue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and  e.contactId =:contactId"

methodoperation type namedQueryMethod --queryName SingxContacts.findById --qvalue "select e from SingxContacts e where e.systemInfo.activeStatus=1 and  e.contactId =:contactId" --qarameteres contactId --typeOfParameteres String --entityName ~.app.shared.singx.SingxContacts --controllerClass ~.app.server.service.SingxContactsService --controllerImplClass ~.app.server.service.SingxContactsServiceImpl --repositoryClass ~.app.server.repository.SingxContactsRepository --repositoryImplClass ~.app.server.repository.SingxContactsRepositoryImpl --businessServiceClass ~.app.server.businessservice.SingxContactsbzService --returnType singx.app.shared.singx.SingxContacts --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.SingxContacts

buzzproperties codeStatus --PropertyFileName status --key SingxContacts --value 0



buzzorclass add --className SingxContactsTestCase  --srcPath test
Class createAnnotation --toClass SingxContactsTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass SingxContactsTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass SingxContactsTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass SingxContactsTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type SingxContactsTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class

buzzorfield create --type SingxContactsTestCase --field_name singxcontactsRepository --dataType singx.app.server.repository.SingxContactsRepository<singx.app.shared.singx.SingxContacts> --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name singxcontactsRepository --valueType singx.app.server.repository.SingxContactsRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingxContactsTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingxContactsTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingxContactsTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"

buzzorfield create --type SingxContactsTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true

buzzorfield create --type SingxContactsTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type SingxContactsTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType

buzzorfield create --type SingxContactsTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType

buzzorfield create --type SingxContactsTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType

buzzormethod add --toClass SingxContactsTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"

buzzormethod add --toClass SingxContactsTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"

buzzormethod add --toClass SingxContactsTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"

buzzormethod add --toClass SingxContactsTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"

buzzormethod add --toClass SingxContactsTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.singx.SingxContacts
 Import add --toClass SingxContactsTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE

buzzormethod add --toClass SingxContactsTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("qFKHnMmEmFReAjHz27FuENvioOA3jAW7"); country.setCapitalLatitude(1); country.setCapitalLongitude(2); country.setCountryCode1("7Wv"); country.setCountryCode2("O4W"); country.setCountryFlag("KvhvI8oUdmkwsuyEX1u7MALTY3XxK1HxHNnGaeI3iUqXDPUVs7"); country.setCountryName("4tm6o8EWbzSXnFwwLvmqAeWt3I0f8oZQZNLq99x1AXIhLBYixH"); country.setCurrencyCode("QjO"); country.setCurrencyName("THFb6ItT7XF4FHoA0KMImgFUWrAdzUbb8EChVXRl8DJLcyiJ3k"); country.setCurrencySymbol("NmtTR7aQpGOqsjfNfyc79LrsS1EAz0TK"); country.setIsoNumeric(7); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());Gender gender=new Gender();gender.setGender("Sr19BmgvE8AKcJsabNbKShnODsymfT2yoebJwaGUqDYi5qmNN0"); Gender GenderTest =genderRepository.save(gender);map.put("GenderPrimaryKey", gender._getPrimarykey());SingxPrefix singxprefix=new SingxPrefix();singxprefix.setCounrtyId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxprefix.setPrefixName("uCanVHhnvNonPSm04RAYIUA8HTWsSkq7BPa2nD9v6RGObkwbFg"); SingxPrefix SingxPrefixTest =singxprefixRepository.save(singxprefix);map.put("SingxPrefixPrimaryKey", singxprefix._getPrimarykey());SingxContacts singxcontacts=new SingxContacts();singxcontacts.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setDateOfBirth(new java.sql.Date(123456789)); singxcontacts.setEmailId("7pF5kbfWCslMV4dnMoBgMdwaFnwBhZfgfAPMkTxsmpNGFR35Gu"); singxcontacts.setFirstName("BwnTdGJXIiwdZFPTilrhalIxCXacDAUxyFKvihko3VguOk2vf0"); singxcontacts.setGenderId((java.lang.String)GenderTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setLastName("U2CQbrZYwU23U2XGQ51OUagFowpb0a0v73nesEJ6O5lW5sTETv"); singxcontacts.setMiddleName("R5KHn2g8Y2kxKC8M1iBnrl5jXSKKT8vd7NxSMwBEswZKypwReA"); singxcontacts.setPhoneCountryCode("3XvJXBRi3vZomZhXb54krZzPyqlkle7J3i7IUc56nfh5pqFZxQ"); singxcontacts.setPhoneNumber(2147483647); singxcontacts.setPrefixId((java.lang.String)SingxPrefixTest._getPrimarykey()); /* ******Adding refrenced table data */singxcontacts.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);singxcontacts.setEntityValidator(entityValidator);singxcontacts.isValid();singxcontactsRepository.save(singxcontacts); map.put("SingxContactsPrimaryKey", singxcontacts._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.location.Country

buzzorfield create --type SingxContactsTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.contacts.Gender

buzzorfield create --type SingxContactsTestCase --field_name genderRepository --dataType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name genderRepository --valueType singx.app.server.repository.GenderRepository<singx.app.shared.contacts.Gender> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.singx.SingxPrefix

buzzorfield create --type SingxContactsTestCase --field_name singxprefixRepository --dataType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --Modifier private --valueType 

fieldAnnotation create --type SingxContactsTestCase --field_name singxprefixRepository --valueType singx.app.server.repository.SingxPrefixRepository<singx.app.shared.singx.SingxPrefix> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass SingxContactsTestCase --importType singx.app.shared.location.Country

buzzormethod add --toClass SingxContactsTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));SingxContacts singxcontacts=singxcontactsRepository.findById((java.lang.String)map.get("SingxContactsPrimaryKey"));singxcontacts.setDateOfBirth(new java.sql.Date(123456789));singxcontacts.setEmailId("zhB4YwDEjuThxSczrTE8cOBOH0NdUpozDwg7kjLEwtduKWoA5z");singxcontacts.setFirstName("5odWAxCHbNulMGuP38EDnNWPSavFs3kYY4vvTMaOgoXJz3ePL6");singxcontacts.setLastName("A2pgZzqGDiAcoGzfjIhlBmhJq7djrlnFvN30W9KRr6ZRhNavjz");singxcontacts.setMiddleName("b39OnwvRNDxfb6YchXdBX6nyYAT8IP8yRGyL6rxNX0cGLqfnzh");singxcontacts.setPhoneCountryCode("ykjRLFyop4ssTbh6ozung604Rci1KlSuabo4KLRjzlTBhoA7MX");singxcontacts.setPhoneNumber(2147483647);singxcontacts.setVersionId(1);singxcontacts.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);singxcontactsRepository.update(singxcontacts);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));singxcontactsRepository.findById((java.lang.String)map.get("SingxContactsPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofcountryId=singxcontactsRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name test3findBygenderId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofgenderId=singxcontactsRepository.findByGenderId((java.lang.String)map.get("GenderPrimaryKey"));if(listofgenderId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name test3findByprefixId --modifier public --return_type void --method_body " try {java.util.List<SingxContacts> listofprefixId=singxcontactsRepository.findByPrefixId((java.lang.String)map.get("SingxPrefixPrimaryKey"));if(listofprefixId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass SingxContactsTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("SingxContactsPrimaryKey"));singxcontactsRepository.delete((java.lang.String)map.get("SingxContactsPrimaryKey"));/* Deleting refrenced data */singxprefixRepository.delete((java.lang.String)map.get("SingxPrefixPrimaryKey"));/* Deleting refrenced data */genderRepository.delete((java.lang.String)map.get("GenderPrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""



buzzproperties codeStatus --PropertyFileName status --key CallingCode --value 1

// Entity Creation 

buzzorclass add --className ~.app.shared.singx.CallingCode --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#singx.app.shared.singx.CallingCode --annotation javax.persistence.Table,javax.persistence.Entity --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_CallingCode_M.javax.persistence.Table,john.doe.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,CallingCode.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType

Persistent add entity --entityName singx.app.shared.singx.CallingCode

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name callingCode --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value callingCode.com.fasterxml.jackson.annotation.JsonProperty,callingCode.javax.persistence.Column

fieldAnnotation create --type ~.app.shared.singx.CallingCode --field_name callingCode --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1

fieldAnnotation create --type ~.app.shared.singx.CallingCode --field_name callingCode --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name mapId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue,name.javax.persistence.Column --value mapId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue,mapId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key value.com.fasterxml.jackson.annotation.JsonProperty,name.javax.persistence.Column --value countryId.com.fasterxml.jackson.annotation.JsonProperty,countryId.javax.persistence.Column

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name entityAudit --dataType singx.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name systemInfo --dataType singx.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"

buzzorfield create --type ~.app.shared.singx.CallingCode --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName callingCode --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName primaryKey --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName mapId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName countryId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName versionId --getterMethod true --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName primaryDisplay --getterMethod false --setterMethod true

methodoperation type getSetMethod --class ~.app.shared.singx.CallingCode --variableName systemInfo --getterMethod true --setterMethod true

methodoperation type hardDelete --entityName ~.app.shared.singx.CallingCode

methodoperation type setValidator --class ~.app.shared.singx.CallingCode

methodoperation type setLoggedUserInfo --class ~.app.shared.singx.CallingCode --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false

methodoperation type comparatorDefaultBody --class ~.app.shared.singx.CallingCode

methodoperation type getPrimayDisplay --class ~.app.shared.singx.CallingCode --variableName callingCode

methodoperation type toString --class ~.app.shared.singx.CallingCode

methodoperation type hashCode --class ~.app.shared.singx.CallingCode --primaryClass true

methodoperation type equals --class ~.app.shared.singx.CallingCode --primaryClass true

class --abstract true --class ~.app.server.service.CallingCodeService

buzzorclass add --className ~.app.server.service.CallingCodeServiceImpl  --extends singx.app.server.service.CallingCodeService --value_type string --annotation org.springframework.web.bind.annotation.RestController

Class createAnnotation --toClass ~.app.server.service.CallingCodeServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.service.CallingCodeService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for CallingCode Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.service.CallingCodeServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for CallingCode Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

interfacebuzzor add --InterfaceName ~.app.server.repository.CallingCodeRepository --genericType T --extends com.athena.server.repository.SearchInterface

buzzorclass add --className ~.app.server.repository.CallingCodeRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType singx.app.server.repository.CallingCodeRepository#singx.app.shared.singx.CallingCode --annotation org.springframework.stereotype.Repository

Class createAnnotation --toClass ~.app.server.repository.CallingCodeRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype

Class createAnnotation --toClass ~.app.server.repository.CallingCodeRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for CallingCode Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

Class createAnnotation --toClass ~.app.server.repository.CallingCodeRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "john.doe.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for CallingCode Master table Entity.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType

buzzorfield create --type ~.app.server.repository.CallingCodeRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired

methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false



methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type ENTITY --entityName ~.app.shared.singx.CallingCode --readOnly false --controllerClass ~.app.server.service.CallingCodeService  --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.CallingCodeBusinessService --isUserAccess false --isAggregateRoot false --isBiz false --isInheritance false --isConcreteClass false

methodoperation type BusinessService --sevicePath ~.app.server.service.CallingCodeServiceImpl --fieldName countryId --fieldType String

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.CallingCode --queryName CallingCode.DefaultFinders --queryValue "select e from CallingCode e where e.systemInfo.activeStatus=1 and e.countryId LIKE :countryId"

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.CallingCode --queryName CallingCode.findByCountryId --queryValue "select e from CallingCode e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"

methodoperation type namedQueryMethod --queryName CallingCode.findByCountryId --qvalue "select e from CallingCode e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.singx.CallingCode --controllerClass ~.app.server.service.CallingCodeService --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --businessServiceClass ~.app.server.businessservice.CallingCodebzService --returnType java.util.List<singx.app.shared.singx.CallingCode> --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.Country

// Named Query  

namedQuery insert --toClass ~.app.shared.singx.CallingCode --queryName CallingCode.findById --queryValue "select e from CallingCode e where e.systemInfo.activeStatus=1 and  e.mapId =:mapId"

methodoperation type namedQueryMethod --queryName CallingCode.findById --qvalue "select e from CallingCode e where e.systemInfo.activeStatus=1 and  e.mapId =:mapId" --qarameteres mapId --typeOfParameteres String --entityName ~.app.shared.singx.CallingCode --controllerClass ~.app.server.service.CallingCodeService --controllerImplClass ~.app.server.service.CallingCodeServiceImpl --repositoryClass ~.app.server.repository.CallingCodeRepository --repositoryImplClass ~.app.server.repository.CallingCodeRepositoryImpl --businessServiceClass ~.app.server.businessservice.CallingCodebzService --returnType singx.app.shared.singx.CallingCode --isFindByID true --isUserAccess false --isMultitenant false --refEntity singx.app.shared.singx.CallingCode

buzzproperties codeStatus --PropertyFileName status --key CallingCode --value 0



buzzorclass add --className CallingCodeTestCase  --srcPath test
Class createAnnotation --toClass CallingCodeTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass CallingCodeTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass CallingCodeTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value singx.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass CallingCodeTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type CallingCodeTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class

buzzorfield create --type CallingCodeTestCase --field_name callingcodeRepository --dataType singx.app.server.repository.CallingCodeRepository<singx.app.shared.singx.CallingCode> --Modifier private --valueType 

fieldAnnotation create --type CallingCodeTestCase --field_name callingcodeRepository --valueType singx.app.server.repository.CallingCodeRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type CallingCodeTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 

fieldAnnotation create --type CallingCodeTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type CallingCodeTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 

fieldAnnotation create --type CallingCodeTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type CallingCodeTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"

buzzorfield create --type CallingCodeTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true

buzzorfield create --type CallingCodeTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 

fieldAnnotation create --type CallingCodeTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzorfield create --type CallingCodeTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType

buzzorfield create --type CallingCodeTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType

buzzorfield create --type CallingCodeTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType

buzzormethod add --toClass CallingCodeTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"

buzzormethod add --toClass CallingCodeTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"

buzzormethod add --toClass CallingCodeTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"

buzzormethod add --toClass CallingCodeTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"

buzzormethod add --toClass CallingCodeTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass CallingCodeTestCase --importType singx.app.shared.singx.CallingCode
 Import add --toClass CallingCodeTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE

buzzormethod add --toClass CallingCodeTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Country country=new Country();country.setCapital("5RIhsnaISjEnripvRpTCp0eHNMQSTaWD"); country.setCapitalLatitude(1); country.setCapitalLongitude(6); country.setCountryCode1("cJi"); country.setCountryCode2("bQZ"); country.setCountryFlag("GuIfHW94GE6msAkToPLC4oaDH4VuI14E1GuO6S2kpgudAhTqaB"); country.setCountryName("rYfRHwrPKwUszfdbkk2jmJXf4jlGjsPrwIBlbiQFg2nkUavcaq"); country.setCurrencyCode("Ozu"); country.setCurrencyName("50uP45N1oxGGRswolQYZT9dpSCwua38Iip2CiaK5pUAeEVjLe0"); country.setCurrencySymbol("34OIiMG6hXu2TOxfbOPsgjuU5kVrxZqr"); country.setIsoNumeric(6); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());CallingCode callingcode=new CallingCode();callingcode.setCallingCode("SvMkH3KD7bGXgqpqxgPBbbEXFFi0O3xmtuy5erOEQHD3rQ041Q"); callingcode.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */callingcode.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);callingcode.setEntityValidator(entityValidator);callingcode.isValid();callingcodeRepository.save(callingcode); map.put("CallingCodePrimaryKey", callingcode._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass CallingCodeTestCase --importType singx.app.shared.location.Country

buzzorfield create --type CallingCodeTestCase --field_name countryRepository --dataType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --Modifier private --valueType 

fieldAnnotation create --type CallingCodeTestCase --field_name countryRepository --valueType singx.app.server.repository.CountryRepository<singx.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("CallingCodePrimaryKey"));CallingCode callingcode=callingcodeRepository.findById((java.lang.String)map.get("CallingCodePrimaryKey"));callingcode.setCallingCode("lTgjj51dHlY2T7CYCw8F9LVn8pEoT8KpeWxUMYAKziadbN4gsz");callingcode.setVersionId(1);callingcode.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);callingcodeRepository.update(callingcode);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<CallingCode> listofcountryId=callingcodeRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("CallingCodePrimaryKey"));callingcodeRepository.findById((java.lang.String)map.get("CallingCodePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""

buzzormethod add --toClass CallingCodeTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("CallingCodePrimaryKey"));callingcodeRepository.delete((java.lang.String)map.get("CallingCodePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {e.printStackTrace(); } "  --annotation org.junit.Test --key "" --value ""





quit